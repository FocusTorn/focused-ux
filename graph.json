{
  "graph": {
    "nodes": {
      "@fux/context-cherry-picker-core": {
        "name": "@fux/context-cherry-picker-core",
        "type": "lib",
        "data": {
          "root": "packages/context-cherry-picker/core",
          "name": "@fux/context-cherry-picker-core",
          "tags": [
            "npm:private",
            "core"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/context-cherry-picker-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "dependsOn": [
                "@fux/shared:build"
              ],
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/context-cherry-picker/core/src/index.ts",
                "outputPath": "packages/context-cherry-picker/core/dist",
                "tsConfig": "packages/context-cherry-picker/core/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "declarationRootDir": "packages/context-cherry-picker/core/src",
                "thirdParty": false,
                "deleteOutputPath": true,
                "external": [
                  "vscode",
                  "awilix",
                  "gpt-tokenizer",
                  "js-yaml",
                  "micromatch"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/context-cherry-picker/core/**/*.ts",
                  "packages/context-cherry-picker/core/**/*.tsx",
                  "packages/context-cherry-picker/core/**/*.js",
                  "packages/context-cherry-picker/core/**/*.jsx",
                  "packages/context-cherry-picker/core/**/*.json",
                  "packages/context-cherry-picker/core/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/context-cherry-picker/core/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/context-cherry-picker-core:lint --fix",
                  "nx run @fux/context-cherry-picker-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/context-cherry-picker-core:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/context-cherry-picker-core",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/context-cherry-picker-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/context-cherry-picker/core/dist packages/context-cherry-picker/core/coverage packages/context-cherry-picker/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/context-cherry-picker/core/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/context-cherry-picker/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "packages/context-cherry-picker/core/test-output/vitest/coverage",
                "configFile": "packages/context-cherry-picker/core/vitest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "^build"
              ],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "packages/context-cherry-picker/core/test-output/vitest/coverage"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/context-cherry-picker/core/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/context-cherry-picker-ext": {
        "name": "@fux/context-cherry-picker-ext",
        "type": "app",
        "data": {
          "root": "packages/context-cherry-picker/ext",
          "name": "@fux/context-cherry-picker-ext",
          "tags": [
            "npm:private",
            "npm:context",
            "npm:cherry pick",
            "npm:developer tools",
            "npm:focused ux",
            "ext"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test",
                "test:run",
                "test:coverage",
                "test:ui"
              ]
            },
            "description": "A standalone VS Code extension for advanced context selection and formatting, designed to streamline the process of gathering and organizing project context for AI interactions and documentation.",
            "js": {
              "packageName": "fux-context-cherry-picker",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "test": {
              "executor": "nx:run-script",
              "metadata": {
                "scriptContent": "nx vite:test",
                "runCommand": "pnpm run test"
              },
              "extends": "vite:test",
              "dependsOn": [
                "^build"
              ],
              "options": {
                "script": "test"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:run": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:run"
              },
              "metadata": {
                "scriptContent": "nx vite:test run",
                "runCommand": "pnpm run test:run"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "nx vite:test run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ui": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ui"
              },
              "metadata": {
                "scriptContent": "nx vite:test --ui",
                "runCommand": "pnpm run test:ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "dependsOn": [
                "^build"
              ],
              "options": {
                "entryPoints": [
                  "packages/context-cherry-picker/ext/src/extension.ts"
                ],
                "outputPath": "packages/context-cherry-picker/ext/dist",
                "format": [
                  "cjs"
                ],
                "metafile": true,
                "platform": "node",
                "bundle": true,
                "external": [
                  "vscode",
                  "awilix",
                  "gpt-tokenizer",
                  "js-yaml",
                  "micromatch"
                ],
                "sourcemap": true,
                "main": "packages/context-cherry-picker/ext/src/extension.ts",
                "tsConfig": "packages/context-cherry-picker/ext/tsconfig.json",
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "packages/context-cherry-picker/ext/assets/",
                    "output": "./assets/"
                  }
                ],
                "target": "es2022",
                "thirdParty": false,
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node scripts/create-vsix.js packages/context-cherry-picker/ext vsix_packages"
              },
              "configurations": {},
              "parallelism": true
            },
            "package:dev": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node scripts/create-vsix.js packages/context-cherry-picker/ext vsix_packages --dev",
                "outputPath": "vsix_packages"
              },
              "configurations": {},
              "parallelism": true
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/context-cherry-picker/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/context-cherry-picker/ext/**/*.ts",
                  "packages/context-cherry-picker/ext/**/*.tsx",
                  "packages/context-cherry-picker/ext/**/*.js",
                  "packages/context-cherry-picker/ext/**/*.jsx",
                  "packages/context-cherry-picker/ext/**/*.json",
                  "packages/context-cherry-picker/ext/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/context-cherry-picker/ext/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/context-cherry-picker-ext:lint --fix",
                  "nx run @fux/context-cherry-picker-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/context-cherry-picker-ext:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/context-cherry-picker-ext",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/context-cherry-picker-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/context-cherry-picker/ext/dist packages/context-cherry-picker/ext/coverage packages/context-cherry-picker/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/context-cherry-picker/ext/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/context-cherry-picker/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test:full": {
              "extends": "vite:test",
              "dependsOn": [
                "^test"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/context-cherry-picker/ext/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@fux/cursor-memory-optimizer": {
        "name": "@fux/cursor-memory-optimizer",
        "type": "lib",
        "data": {
          "root": "libs/tools/cursor-memory-optimizer",
          "name": "@fux/cursor-memory-optimizer",
          "tags": [
            "npm:private",
            "tool"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "add-context-menu",
                "add-shortcut-context",
                "remove-context-menu",
                "remove-shortcut-context"
              ]
            },
            "description": "Memory optimization tool for Cursor IDE",
            "js": {
              "packageName": "@fux/cursor-memory-optimizer",
              "isInPackageManagerWorkspaces": false
            }
          },
          "targets": {
            "add-context-menu": {
              "executor": "nx:run-script",
              "options": {
                "script": "add-context-menu"
              },
              "metadata": {
                "scriptContent": "powershell.exe -ExecutionPolicy Bypass -File scripts/add-context-menu.ps1",
                "runCommand": "pnpm run add-context-menu"
              },
              "configurations": {},
              "parallelism": true
            },
            "add-shortcut-context": {
              "executor": "nx:run-script",
              "options": {
                "script": "add-shortcut-context"
              },
              "metadata": {
                "scriptContent": "powershell.exe -ExecutionPolicy Bypass -File scripts/add-shortcut-context.ps1",
                "runCommand": "pnpm run add-shortcut-context"
              },
              "configurations": {},
              "parallelism": true
            },
            "remove-context-menu": {
              "executor": "nx:run-script",
              "options": {
                "script": "remove-context-menu"
              },
              "metadata": {
                "scriptContent": "powershell.exe -ExecutionPolicy Bypass -File scripts/add-context-menu.ps1 -Remove",
                "runCommand": "pnpm run remove-context-menu"
              },
              "configurations": {},
              "parallelism": true
            },
            "remove-shortcut-context": {
              "executor": "nx:run-script",
              "options": {
                "script": "remove-shortcut-context"
              },
              "metadata": {
                "scriptContent": "powershell.exe -ExecutionPolicy Bypass -File scripts/add-shortcut-context.ps1 -Remove",
                "runCommand": "pnpm run remove-shortcut-context"
              },
              "configurations": {},
              "parallelism": true
            },
            "optimize": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsx --expose-gc libs/tools/cursor-memory-optimizer/src/index.ts optimize"
              },
              "configurations": {},
              "parallelism": true
            },
            "monitor": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsx --expose-gc libs/tools/cursor-memory-optimizer/src/index.ts monitor"
              },
              "configurations": {},
              "parallelism": true
            },
            "launch": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsx --expose-gc libs/tools/cursor-memory-optimizer/src/index.ts launch"
              },
              "configurations": {},
              "parallelism": true
            },
            "status": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsx --expose-gc libs/tools/cursor-memory-optimizer/src/index.ts status"
              },
              "configurations": {},
              "parallelism": true
            },
            "gc": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsx --expose-gc libs/tools/cursor-memory-optimizer/src/index.ts gc"
              },
              "configurations": {},
              "parallelism": true
            },
            "check": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsx --expose-gc libs/tools/cursor-memory-optimizer/src/index.ts check"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "libs/tools/cursor-memory-optimizer/**/*.ts",
                  "libs/tools/cursor-memory-optimizer/**/*.tsx",
                  "libs/tools/cursor-memory-optimizer/**/*.js",
                  "libs/tools/cursor-memory-optimizer/**/*.jsx",
                  "libs/tools/cursor-memory-optimizer/**/*.json",
                  "libs/tools/cursor-memory-optimizer/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "libs/tools/cursor-memory-optimizer/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/tools/cursor-memory-optimizer/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/project-butler-core": {
        "name": "@fux/project-butler-core",
        "type": "lib",
        "data": {
          "root": "packages/project-butler/core",
          "name": "@fux/project-butler-core",
          "tags": [
            "npm:private",
            "core"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/project-butler-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/project-butler/core/src/index.ts",
                "outputPath": "packages/project-butler/core/dist",
                "declarationRootDir": "packages/project-butler/core/src",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "external": [
                  "vscode",
                  "js-yaml"
                ],
                "tsConfig": "packages/project-butler/core/tsconfig.json",
                "platform": "node",
                "target": "es2022",
                "thirdParty": false,
                "sourcemap": true,
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/project-butler/core/**/*.ts",
                  "packages/project-butler/core/**/*.tsx",
                  "packages/project-butler/core/**/*.js",
                  "packages/project-butler/core/**/*.jsx",
                  "packages/project-butler/core/**/*.json",
                  "packages/project-butler/core/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/project-butler/core/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/project-butler-core:lint --fix",
                  "nx run @fux/project-butler-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/project-butler-core:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/project-butler-core",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/project-butler-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/project-butler/core/dist packages/project-butler/core/coverage packages/project-butler/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/project-butler/core/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/project-butler/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "extends": "test",
              "configurations": {},
              "options": {
                "configFile": "packages/project-butler/core/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:coverage-tests": {
              "extends": "test:coverage-tests",
              "configurations": {},
              "options": {
                "configFile": "packages/project-butler/core/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:deps": {
              "extends": "test:deps",
              "configurations": {},
              "options": {
                "configFile": "packages/project-butler/core/vitest.config.ts",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ]
            },
            "test:deps:coverage-tests": {
              "extends": "test:deps:coverage-tests",
              "configurations": {},
              "options": {
                "configFile": "packages/project-butler/core/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test:coverage-tests",
                  "params": "forward"
                }
              ]
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/project-butler/core/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/structure-auditor": {
        "name": "@fux/structure-auditor",
        "type": "lib",
        "data": {
          "root": "libs/tools/structure-auditor",
          "name": "@fux/structure-auditor",
          "tags": [
            "npm:private",
            "tool"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/structure-auditor",
              "isInPackageManagerWorkspaces": false
            }
          },
          "targets": {
            "audit": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "libs/tools/structure-auditor/**/*.ts",
                  "libs/tools/structure-auditor/**/*.tsx",
                  "libs/tools/structure-auditor/**/*.js",
                  "libs/tools/structure-auditor/**/*.jsx",
                  "libs/tools/structure-auditor/**/*.json",
                  "libs/tools/structure-auditor/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "libs/tools/structure-auditor/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/tools/structure-auditor/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/project-alias-expander": {
        "name": "@fux/project-alias-expander",
        "type": "lib",
        "data": {
          "root": "libs/project-alias-expander",
          "name": "@fux/project-alias-expander",
          "tags": [
            "npm:public",
            "npm:cli",
            "npm:nx",
            "npm:alias",
            "npm:project-management",
            "tool"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "postbuild"
              ]
            },
            "description": "Global CLI tool for expanding project aliases and running Nx commands",
            "js": {
              "packageName": "@fux/project-alias-expander",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "postbuild": {
              "executor": "nx:run-script",
              "options": {
                "script": "postbuild"
              },
              "metadata": {
                "scriptContent": "nx run project-alias-expander:postbuild",
                "runCommand": "pnpm run postbuild"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build:compile": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "inputs": [
                "production",
                "^production",
                "{projectRoot}/config.json"
              ],
              "options": {
                "outputPath": "libs/project-alias-expander/dist",
                "main": "libs/project-alias-expander/src/cli.ts",
                "tsConfig": "libs/project-alias-expander/tsconfig.json",
                "platform": "node",
                "bundle": true,
                "external": [
                  "vscode"
                ],
                "thirdParty": true,
                "assets": [
                  {
                    "glob": "config.json",
                    "input": "libs/project-alias-expander",
                    "output": "."
                  }
                ],
                "format": [
                  "esm"
                ],
                "target": "es2022",
                "sourcemap": true,
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true
            },
            "build": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build:compile"
              ],
              "outputs": [
                "{projectRoot}/dist/pae-functions.psm1"
              ],
              "inputs": [
                "production",
                "^production",
                "{projectRoot}/config.json"
              ],
              "options": {
                "commands": [
                  "node libs/project-alias-expander/dist/cli.js install-aliases"
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "libs/project-alias-expander/**/*.ts",
                  "libs/project-alias-expander/**/*.tsx",
                  "libs/project-alias-expander/**/*.js",
                  "libs/project-alias-expander/**/*.jsx",
                  "libs/project-alias-expander/**/*.json",
                  "libs/project-alias-expander/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "libs/project-alias-expander/.nx/eslintcache"
              },
              "parallelism": true,
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ],
              "options": {
                "configFile": "libs/project-alias-expander/vitest.config.ts",
                "passWithNoTests": true,
                "reportsDirectory": "__tests__/_reports/functional"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage-tests": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ],
              "options": {
                "configFile": "libs/project-alias-expander/vitest.coverage.config.ts",
                "reportsDirectory": "libs/project-alias-expander/__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "test:deps": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "options": {
                "configFile": "libs/project-alias-expander/vitest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "test:deps:coverage-tests": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test:coverage-tests",
                  "params": "forward"
                }
              ],
              "options": {
                "configFile": "libs/project-alias-expander/vitest.coverage.config.ts",
                "reportsDirectory": "libs/project-alias-expander/__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/project-alias-expander/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/project-butler-ext": {
        "name": "@fux/project-butler-ext",
        "type": "app",
        "data": {
          "root": "packages/project-butler/ext",
          "name": "@fux/project-butler-ext",
          "tags": [
            "npm:private",
            "ext"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "A VSCode extension for project management utilities including package.json formatting, terminal management, backup creation, and Poetry shell integration.",
            "js": {
              "packageName": "fux-project-butler",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "dependsOn": [
                {
                  "projects": [
                    "@fux/project-butler-core"
                  ],
                  "target": "build",
                  "params": "ignore"
                }
              ],
              "options": {
                "main": "packages/project-butler/ext/src/extension.ts",
                "tsConfig": "packages/project-butler/ext/tsconfig.json",
                "outputPath": "packages/project-butler/ext/dist",
                "format": [
                  "cjs"
                ],
                "external": [
                  "vscode",
                  "js-yaml"
                ],
                "metafile": true,
                "bundle": true,
                "sourcemap": true,
                "platform": "node",
                "target": "es2022",
                "thirdParty": false,
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package": {
              "executor": "@fux/vpack:pack",
              "dependsOn": [
                "build",
                "@fux/vsix-packager:build"
              ],
              "options": {
                "targetPath": "packages/project-butler/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "package:dev": {
              "extends": "package:dev",
              "configurations": {},
              "options": {
                "targetPath": "packages/project-butler/ext",
                "outputPath": "vsix_packages",
                "deployPath": ".vpack/deploy",
                "freshDeploy": true,
                "keepDeploy": true,
                "contentsPath": ".vpack/contents",
                "extractContents": true,
                "dev": true
              },
              "parallelism": true,
              "executor": "@fux/vpack:pack",
              "outputs": [
                "{options.outputPath}"
              ]
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/project-butler/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/project-butler/ext/**/*.ts",
                  "packages/project-butler/ext/**/*.tsx",
                  "packages/project-butler/ext/**/*.js",
                  "packages/project-butler/ext/**/*.jsx",
                  "packages/project-butler/ext/**/*.json",
                  "packages/project-butler/ext/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/project-butler/ext/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/project-butler-ext:lint --fix",
                  "nx run @fux/project-butler-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/project-butler-ext:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/project-butler-ext",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/project-butler-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/project-butler/ext/dist packages/project-butler/ext/coverage packages/project-butler/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/project-butler/ext/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/project-butler/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "extends": "test",
              "configurations": {},
              "options": {
                "configFile": "packages/project-butler/ext/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:coverage-tests": {
              "extends": "test:coverage-tests",
              "configurations": {},
              "options": {
                "configFile": "packages/project-butler/ext/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:deps": {
              "extends": "test:deps",
              "configurations": {},
              "options": {
                "configFile": "packages/project-butler/ext/vitest.config.ts",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ]
            },
            "test:deps:coverage-tests": {
              "extends": "test:deps:coverage-tests",
              "configurations": {},
              "options": {
                "configFile": "packages/project-butler/ext/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test:coverage-tests",
                  "params": "forward"
                }
              ]
            },
            "test:compile": {
              "executor": "nx:run-commands",
              "outputs": [
                "{projectRoot}/__tests__/integration-tests/_out-tsc"
              ],
              "options": {
                "commands": [
                  "tsc -p packages/project-butler/ext/__tests__/integration-tests/tsconfig.test.json"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "test:integration": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "test:compile"
              ],
              "cache": false,
              "options": {
                "commands": [
                  "powershell -Command \"& {vscode-test --config __tests__/integration-tests/.vscode-test.mjs --verbose --timeout 20000 --reporter spec 2>&1 | Select-String -NotMatch 'extensionEnabledApiProposals', 'ChatSessionStore', 'update#setState disabled', 'update#ctor', 'Started local extension host', 'Settings Sync'}\""
                ],
                "cwd": "packages/project-butler/ext"
              },
              "description": "Run VS Code extension integration tests with detailed output",
              "configurations": {},
              "parallelism": true
            },
            "test:integration:noisy": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "test:compile"
              ],
              "cache": false,
              "options": {
                "commands": [
                  "vscode-test --config __tests__/integration-tests/.vscode-test.mjs --verbose --timeout 20000 --reporter spec"
                ],
                "cwd": "packages/project-butler/ext"
              },
              "description": "Run VS Code extension integration tests with detailed output",
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/project-butler/ext/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@fux/vscode-test-cli-config": {
        "name": "@fux/vscode-test-cli-config",
        "type": "lib",
        "data": {
          "root": "libs/vscode-test-cli-config",
          "name": "@fux/vscode-test-cli-config",
          "tags": [
            "npm:private",
            "lib",
            "util",
            "tools"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/vscode-test-cli-config",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "libs/vscode-test-cli-config/src/index.ts",
                "outputPath": "libs/vscode-test-cli-config/dist",
                "tsConfig": "libs/vscode-test-cli-config/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "thirdParty": false,
                "deleteOutputPath": false,
                "external": [
                  "vscode"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "libs/vscode-test-cli-config/**/*.ts",
                  "libs/vscode-test-cli-config/**/*.tsx",
                  "libs/vscode-test-cli-config/**/*.js",
                  "libs/vscode-test-cli-config/**/*.jsx",
                  "libs/vscode-test-cli-config/**/*.json",
                  "libs/vscode-test-cli-config/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "libs/vscode-test-cli-config/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf libs/vscode-test-cli-config/dist libs/vscode-test-cli-config/coverage libs/vscode-test-cli-config/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/vscode-test-cli-config/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/dynamicons-assets": {
        "name": "@fux/dynamicons-assets",
        "type": "lib",
        "data": {
          "root": "packages/dynamicons/assets",
          "name": "@fux/dynamicons-assets",
          "tags": [
            "npm:private",
            "scope:dynamicons",
            "type:assets"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/dynamicons-assets",
              "packageExports": {
                "./themes/*": "./dist/assets/themes/*",
                "./icons/*": "./dist/assets/icons/*",
                "./images/*": "./dist/assets/images/*",
                "./logo": "./assets/logo.jpeg",
                "./themes/focused-ux-colors": "./dist/assets/themes/focused-ux-colors.theme.json",
                "./themes/dynamicons": "./dist/assets/themes/dynamicons.theme.json"
              },
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "inputs": [
                "{projectRoot}/src/**/*"
              ],
              "options": {
                "main": "packages/dynamicons/assets/src/index.ts",
                "outputPath": "packages/dynamicons/assets/dist",
                "tsConfig": "packages/dynamicons/assets/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "declarationRootDir": "packages/dynamicons/assets/src",
                "thirdParty": false,
                "deleteOutputPath": false,
                "external": []
              },
              "configurations": {},
              "parallelism": true,
              "cache": true
            },
            "generate-assets": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node dist/cli.js",
                "cwd": "packages/dynamicons/assets"
              },
              "dependsOn": [
                "build"
              ],
              "inputs": [
                "default",
                "{workspaceRoot}/packages/dynamicons/assets/src/_config/dynamicons.constants.js",
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/new_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/file_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/folder_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/src/models/**/*.json",
                "{workspaceRoot}/packages/dynamicons/assets/svgo.config.mjs"
              ],
              "outputs": [
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/file_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/folder_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/themes/base.theme.json",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/themes/dynamicons.theme.json",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/images/preview-images/File_icons_preview.png",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/images/preview-images/Folder_icons_preview.png",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/images/preview-images/Folder_Open_icons_preview.png"
              ],
              "description": "Generate all assets (icons, themes, previews) with orchestrated output",
              "configurations": {},
              "parallelism": true
            },
            "build-with-assets": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  "nx build @fux/dynamicons-assets",
                  "node dist/cli.js"
                ],
                "parallel": false
              },
              "dependsOn": [
                "build"
              ],
              "inputs": [
                "default",
                "{workspaceRoot}/packages/dynamicons/assets/src/_config/dynamicons.constants.js",
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/new_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/file_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/folder_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/src/models/**/*.json",
                "{workspaceRoot}/packages/dynamicons/assets/svgo.config.mjs"
              ],
              "outputs": [
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/file_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/assets/icons/folder_icons/**/*",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/themes/base.theme.json",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/themes/dynamicons.theme.json",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/images/preview-images/File_icons_preview.png",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/images/preview-images/Folder_icons_preview.png",
                "{workspaceRoot}/packages/dynamicons/assets/dist/assets/images/preview-images/Folder_Open_icons_preview.png"
              ],
              "description": "Build package and generate all assets in one command",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/dynamicons/assets/**/*.ts",
                  "packages/dynamicons/assets/**/*.tsx",
                  "packages/dynamicons/assets/**/*.js",
                  "packages/dynamicons/assets/**/*.jsx",
                  "packages/dynamicons/assets/**/*.json",
                  "packages/dynamicons/assets/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/dynamicons/assets/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-assets:lint --fix",
                  "nx run @fux/dynamicons-assets:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-assets:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/dynamicons-assets",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-assets:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/assets/dist packages/dynamicons/assets/coverage packages/dynamicons/assets/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/assets/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/assets/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ],
              "configurations": {},
              "options": {
                "configFile": "packages/dynamicons/assets/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/dynamicons/assets/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/ghost-writer-core": {
        "name": "@fux/ghost-writer-core",
        "type": "lib",
        "data": {
          "root": "packages/ghost-writer/core",
          "name": "@fux/ghost-writer-core",
          "tags": [
            "npm:private",
            "core"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/ghost-writer-core",
              "packageExports": {
                ".": {
                  "types": "./dist/packages/ghost-writer/core/src/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/ghost-writer/core/src/index.ts",
                "outputPath": "packages/ghost-writer/core/dist",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "external": [
                  "vscode",
                  "typescript"
                ],
                "tsConfig": "packages/ghost-writer/core/tsconfig.json",
                "platform": "node",
                "target": "es2022",
                "thirdParty": false,
                "sourcemap": true,
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/ghost-writer/core/**/*.ts",
                  "packages/ghost-writer/core/**/*.tsx",
                  "packages/ghost-writer/core/**/*.js",
                  "packages/ghost-writer/core/**/*.jsx",
                  "packages/ghost-writer/core/**/*.json",
                  "packages/ghost-writer/core/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/ghost-writer/core/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/ghost-writer-core:lint --fix",
                  "nx run @fux/ghost-writer-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/ghost-writer-core:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/ghost-writer-core",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/ghost-writer-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/ghost-writer/core/dist packages/ghost-writer/core/coverage packages/ghost-writer/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/ghost-writer/core/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/ghost-writer/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "extends": "test",
              "configurations": {},
              "options": {
                "configFile": "packages/ghost-writer/core/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:coverage-tests": {
              "extends": "test:coverage-tests",
              "configurations": {},
              "options": {
                "configFile": "packages/ghost-writer/core/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:deps": {
              "extends": "test:deps",
              "configurations": {},
              "options": {
                "configFile": "packages/ghost-writer/core/vitest.config.ts",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ]
            },
            "test:deps:coverage-tests": {
              "extends": "test:deps:coverage-tests",
              "configurations": {},
              "options": {
                "configFile": "packages/ghost-writer/core/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test:coverage-tests",
                  "params": "forward"
                }
              ]
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/ghost-writer/core/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/ghost-writer-ext": {
        "name": "@fux/ghost-writer-ext",
        "type": "app",
        "data": {
          "root": "packages/ghost-writer/ext",
          "name": "@fux/ghost-writer-ext",
          "tags": [
            "npm:private",
            "npm:import",
            "npm:code generation",
            "npm:automation",
            "npm:logging",
            "npm:console",
            "npm:debug",
            "npm:snippet",
            "npm:clipboard",
            "npm:developer tools",
            "npm:focused ux",
            "ext"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Dynamically generate frequently used code.",
            "js": {
              "packageName": "fux-ghost-writer",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "dependsOn": [
                "^build"
              ],
              "options": {
                "main": "packages/ghost-writer/ext/src/extension.ts",
                "entryPoints": [
                  "packages/ghost-writer/ext/src/extension.ts"
                ],
                "outputPath": "packages/ghost-writer/ext/dist",
                "tsConfig": "packages/ghost-writer/ext/tsconfig.json",
                "format": [
                  "cjs"
                ],
                "metafile": true,
                "platform": "node",
                "bundle": true,
                "sourcemap": true,
                "external": [
                  "vscode"
                ],
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "packages/ghost-writer/ext/assets/",
                    "output": "./assets/"
                  }
                ],
                "target": "es2022",
                "thirdParty": false,
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package": {
              "executor": "@fux/vpack:pack",
              "dependsOn": [
                "build",
                "@fux/vsix-packager:build"
              ],
              "options": {
                "targetPath": "packages/ghost-writer/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "package:dev": {
              "extends": "package:dev",
              "configurations": {},
              "options": {
                "targetPath": "packages/ghost-writer/ext",
                "outputPath": "vsix_packages",
                "deployPath": ".vpack/deploy",
                "freshDeploy": true,
                "keepDeploy": true,
                "contentsPath": ".vpack/contents",
                "extractContents": true,
                "dev": true
              },
              "parallelism": true,
              "executor": "@fux/vpack:pack",
              "outputs": [
                "{options.outputPath}"
              ]
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/ghost-writer/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/ghost-writer/ext/**/*.ts",
                  "packages/ghost-writer/ext/**/*.tsx",
                  "packages/ghost-writer/ext/**/*.js",
                  "packages/ghost-writer/ext/**/*.jsx",
                  "packages/ghost-writer/ext/**/*.json",
                  "packages/ghost-writer/ext/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/ghost-writer/ext/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/ghost-writer-ext:lint --fix",
                  "nx run @fux/ghost-writer-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/ghost-writer-ext:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/ghost-writer-ext",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/ghost-writer-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/ghost-writer/ext/dist packages/ghost-writer/ext/coverage packages/ghost-writer/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/ghost-writer/ext/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/ghost-writer/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "extends": "test",
              "configurations": {},
              "options": {
                "configFile": "packages/ghost-writer/ext/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:coverage-tests": {
              "extends": "test:coverage-tests",
              "configurations": {},
              "options": {
                "configFile": "packages/ghost-writer/ext/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "test:deps": {
              "extends": "test:deps",
              "configurations": {},
              "options": {
                "configFile": "packages/ghost-writer/ext/vitest.config.ts",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ]
            },
            "test:deps:coverage-tests": {
              "extends": "test:deps:coverage-tests",
              "configurations": {},
              "options": {
                "configFile": "packages/ghost-writer/ext/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
              },
              "parallelism": true,
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test:coverage-tests",
                  "params": "forward"
                }
              ]
            },
            "test:compile": {
              "executor": "nx:run-commands",
              "outputs": [
                "{projectRoot}/__tests__/integration-tests/_out-tsc"
              ],
              "options": {
                "commands": [
                  "tsc -p packages/ghost-writer/ext/__tests__/integration-tests/tsconfig.test.json"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "test:integration": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "test:compile"
              ],
              "cache": false,
              "options": {
                "commands": [
                  "powershell -Command \"& {vscode-test --config __tests__/integration-tests/.vscode-test.mjs --verbose --timeout 20000 --reporter spec 2>&1 | Select-String -NotMatch 'extensionEnabledApiProposals', 'ChatSessionStore', 'update#setState disabled', 'update#ctor', 'Started local extension host', 'Settings Sync'}\""
                ],
                "cwd": "packages/ghost-writer/ext"
              },
              "description": "Run VS Code extension integration tests with detailed output",
              "configurations": {},
              "parallelism": true
            },
            "test:integration:noisy": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "test:compile"
              ],
              "cache": false,
              "options": {
                "commands": [
                  "vscode-test --config __tests__/integration-tests/.vscode-test.mjs --verbose --timeout 20000 --reporter spec"
                ],
                "cwd": "packages/ghost-writer/ext"
              },
              "description": "Run VS Code extension integration tests with detailed output",
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/ghost-writer/ext/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@fux/prune-nx-cache": {
        "name": "@fux/prune-nx-cache",
        "type": "lib",
        "data": {
          "root": "libs/tools/prune-nx-cache",
          "name": "@fux/prune-nx-cache",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/prune-nx-cache",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/tools/prune-nx-cache/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/dynamicons-core": {
        "name": "@fux/dynamicons-core",
        "type": "lib",
        "data": {
          "root": "packages/dynamicons/core",
          "name": "@fux/dynamicons-core",
          "tags": [
            "npm:public",
            "scope:dynamicons",
            "type:core"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/dynamicons-core",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": [
                "@fux/dynamicons-assets:generate-assets"
              ],
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "inputs": [
                "{projectRoot}/src/**/*"
              ],
              "options": {
                "main": "packages/dynamicons/core/src/index.ts",
                "outputPath": "packages/dynamicons/core/dist",
                "tsConfig": "packages/dynamicons/core/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "declarationRootDir": "packages/dynamicons/core/src",
                "thirdParty": false,
                "deleteOutputPath": true,
                "external": [
                  "vscode",
                  "strip-json-comments"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/dynamicons/core/**/*.ts",
                  "packages/dynamicons/core/**/*.tsx",
                  "packages/dynamicons/core/**/*.js",
                  "packages/dynamicons/core/**/*.jsx",
                  "packages/dynamicons/core/**/*.json",
                  "packages/dynamicons/core/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/dynamicons/core/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-core:lint --fix",
                  "nx run @fux/dynamicons-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-core:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/dynamicons-core",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/core/dist packages/dynamicons/core/coverage packages/dynamicons/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/core/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "build",
                "^build"
              ],
              "configurations": {},
              "options": {
                "configFile": "packages/dynamicons/core/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/dynamicons/core/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/dynamicons-ext": {
        "name": "@fux/dynamicons-ext",
        "type": "app",
        "data": {
          "root": "packages/dynamicons/ext",
          "name": "@fux/dynamicons-ext",
          "tags": [
            "npm:private",
            "npm:icon theme",
            "npm:theme",
            "npm:icons",
            "npm:dynamicons",
            "npm:focused ux",
            "ext"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "A dynamic and customizable icon theme for a focused user experience.",
            "js": {
              "packageName": "fux-dynamicons",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "dependsOn": [
                {
                  "projects": [
                    "@fux/dynamicons-core"
                  ],
                  "target": "build",
                  "params": "ignore"
                },
                "@fux/dynamicons-assets:generate-assets"
              ],
              "options": {
                "main": "packages/dynamicons/ext/src/extension.ts",
                "tsConfig": "packages/dynamicons/ext/tsconfig.json",
                "entryPoints": [
                  "packages/dynamicons/ext/src/extension.ts"
                ],
                "platform": "node",
                "format": [
                  "cjs"
                ],
                "outputPath": "packages/dynamicons/ext/dist",
                "external": [
                  "vscode",
                  "strip-json-comments",
                  "@fux/dynamicons-assets"
                ],
                "metafile": true,
                "bundle": true,
                "sourcemap": true,
                "target": "es2022",
                "thirdParty": false,
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package:devog": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node scripts/create-vsix.js packages/dynamicons/ext vsix_packages --dev",
                "outputPath": "vsix_packages"
              },
              "configurations": {},
              "parallelism": true
            },
            "package": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "commands": [
                  "nx run @fux/vsix-packager:cli",
                  "node libs/vsix-packager/dist/cli/index.js packages/dynamicons/ext vsix_packages"
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true
            },
            "package:dev": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "commands": [
                  "nx run @fux/vsix-packager:cli",
                  "node libs/vsix-packager/dist/cli/index.js packages/dynamicons/ext vsix_packages --dev"
                ],
                "parallel": false
              },
              "configurations": {},
              "parallelism": true
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/dynamicons/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/dynamicons/ext/**/*.ts",
                  "packages/dynamicons/ext/**/*.tsx",
                  "packages/dynamicons/ext/**/*.js",
                  "packages/dynamicons/ext/**/*.jsx",
                  "packages/dynamicons/ext/**/*.json",
                  "packages/dynamicons/ext/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/dynamicons/ext/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-ext:lint --fix",
                  "nx run @fux/dynamicons-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-ext:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/dynamicons-ext",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/dynamicons-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/ext/dist packages/dynamicons/ext/coverage packages/dynamicons/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/ext/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/dynamicons/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "^build"
              ],
              "options": {
                "configFile": "packages/dynamicons/ext/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "test:compile": {
              "executor": "nx:run-commands",
              "outputs": [
                "{projectRoot}/__tests__/_out-tsc"
              ],
              "options": {
                "commands": [
                  "tsc -p packages/dynamicons/ext/__tests__/tsconfig.test.json"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "test:integration": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "test:compile"
              ],
              "options": {
                "commands": [
                  "nx run @fux/vscode-test-cli-config:build",
                  "vscode-test --config .vscode-test.mjs"
                ],
                "cwd": "packages/dynamicons/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:integration:full": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "test:compile"
              ],
              "options": {
                "commands": [
                  "nx run @fux/vscode-test-cli-config:build",
                  "vscode-test --config .vscode-test.mjs --coverage"
                ],
                "cwd": "packages/dynamicons/ext"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/dynamicons/ext/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@fux/note-hub-core": {
        "name": "@fux/note-hub-core",
        "type": "lib",
        "data": {
          "root": "packages/note-hub/core",
          "name": "@fux/note-hub-core",
          "tags": [
            "npm:private",
            "core"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/note-hub-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/note-hub/core/src/index.ts",
                "outputPath": "packages/note-hub/core/dist",
                "tsConfig": "packages/note-hub/core/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "declarationRootDir": "packages/note-hub/core/src",
                "thirdParty": false,
                "deleteOutputPath": true,
                "external": [
                  "vscode",
                  "js-yaml"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/note-hub/core/**/*.ts",
                  "packages/note-hub/core/**/*.tsx",
                  "packages/note-hub/core/**/*.js",
                  "packages/note-hub/core/**/*.jsx",
                  "packages/note-hub/core/**/*.json",
                  "packages/note-hub/core/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/note-hub/core/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/note-hub-core:lint --fix",
                  "nx run @fux/note-hub-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/note-hub-core:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/note-hub-core",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/note-hub-core:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/note-hub/core/dist packages/note-hub/core/coverage packages/note-hub/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/note-hub/core/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/note-hub/core/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {
                "configFile": "packages/note-hub/core/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/note-hub/core/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/note-hub-ext": {
        "name": "@fux/note-hub-ext",
        "type": "app",
        "data": {
          "root": "packages/note-hub/ext",
          "name": "@fux/note-hub-ext",
          "tags": [
            "npm:private",
            "npm:focused ux",
            "npm:f-ux",
            "ext"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Notes Hub VSCode extension",
            "js": {
              "packageName": "fux-note-hub",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "dependsOn": [
                "^build"
              ],
              "options": {
                "entryPoints": [
                  "packages/note-hub/ext/src/extension.ts"
                ],
                "outputPath": "packages/note-hub/ext/dist",
                "format": [
                  "cjs"
                ],
                "metafile": true,
                "platform": "node",
                "bundle": true,
                "external": [
                  "vscode",
                  "js-yaml"
                ],
                "sourcemap": true,
                "main": "packages/note-hub/ext/src/extension.ts",
                "tsConfig": "packages/note-hub/ext/tsconfig.json",
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "packages/note-hub/ext/assets/",
                    "output": "./assets/"
                  }
                ],
                "thirdParty": true,
                "target": "es2022",
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node scripts/create-vsix.js packages/note-hub/ext vsix_packages"
              },
              "configurations": {},
              "parallelism": true
            },
            "package:dev": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node scripts/create-vsix.js packages/note-hub/ext vsix_packages --dev",
                "outputPath": "vsix_packages"
              },
              "cache": false,
              "inputs": [
                "production",
                "^production",
                "{workspaceRoot}/scripts/create-vsix.js"
              ],
              "outputs": [
                "{options.outputPath}"
              ],
              "configurations": {},
              "parallelism": true
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/note-hub/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "packages/note-hub/ext/**/*.ts",
                  "packages/note-hub/ext/**/*.tsx",
                  "packages/note-hub/ext/**/*.js",
                  "packages/note-hub/ext/**/*.jsx",
                  "packages/note-hub/ext/**/*.json",
                  "packages/note-hub/ext/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "packages/note-hub/ext/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/note-hub-ext:lint --fix",
                  "nx run @fux/note-hub-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/note-hub-ext:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/note-hub-ext",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/note-hub-ext:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf packages/note-hub/ext/dist packages/note-hub/ext/coverage packages/note-hub/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf packages/note-hub/ext/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf packages/note-hub/ext/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {
                "configFile": "packages/note-hub/ext/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/note-hub/ext/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@fux/recommended": {
        "name": "@fux/recommended",
        "type": "lib",
        "data": {
          "root": "plugins/recommended",
          "name": "@fux/recommended",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/recommended",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "rootDir": "plugins/recommended/src",
                "outputPath": "plugins/recommended/dist",
                "main": "plugins/recommended/src/index.ts",
                "tsConfig": "plugins/recommended/tsconfig.lib.json",
                "generatePackageJson": false,
                "assets": [
                  {
                    "input": "./plugins/recommended/src",
                    "glob": "**/!(*.ts)",
                    "output": "."
                  },
                  {
                    "input": "./plugins/recommended/src",
                    "glob": "**/*.d.ts",
                    "output": "."
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "plugins/recommended/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/observability": {
        "name": "@fux/observability",
        "type": "lib",
        "data": {
          "root": "libs/observability",
          "name": "@fux/observability",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/observability",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "libs/observability/src/index.ts",
                "outputPath": "libs/observability/dist",
                "tsConfig": "libs/observability/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "declarationRootDir": "libs/observability/src",
                "thirdParty": false,
                "deleteOutputPath": true,
                "external": []
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "libs/observability/**/*.ts",
                  "libs/observability/**/*.tsx",
                  "libs/observability/**/*.js",
                  "libs/observability/**/*.jsx",
                  "libs/observability/**/*.json",
                  "libs/observability/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "libs/observability/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/observability:lint --fix",
                  "nx run @fux/observability:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/observability:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/observability",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/observability:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf libs/observability/dist libs/observability/coverage libs/observability/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf libs/observability/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf libs/observability/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {
                "configFile": "libs/observability/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "options": {
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/observability/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/vsix-packager": {
        "name": "@fux/vsix-packager",
        "type": "lib",
        "data": {
          "root": "libs/vsix-packager",
          "name": "@fux/vsix-packager",
          "tags": [
            "npm:public",
            "type:tool",
            "scope:vsix-packager"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/vsix-packager",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "libs/vsix-packager/src/index.ts",
                "outputPath": "libs/vsix-packager/dist",
                "tsConfig": "libs/vsix-packager/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "thirdParty": false,
                "deleteOutputPath": false,
                "external": [
                  "vscode"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "cli": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "libs/vsix-packager/src/cli/index.ts",
                "outputPath": "libs/vsix-packager/dist",
                "tsConfig": "libs/vsix-packager/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "thirdParty": false,
                "deleteOutputPath": false,
                "external": [
                  "vscode"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "run": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "cli"
              ],
              "options": {
                "command": "node libs/vsix-packager/dist/cli/index.js {args}",
                "parallel": false
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "^build"
              ],
              "options": {
                "configFile": "libs/vsix-packager/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "libs/vsix-packager/**/*.ts",
                  "libs/vsix-packager/**/*.tsx",
                  "libs/vsix-packager/**/*.js",
                  "libs/vsix-packager/**/*.jsx",
                  "libs/vsix-packager/**/*.json",
                  "libs/vsix-packager/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "libs/vsix-packager/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf libs/vsix-packager/dist libs/vsix-packager/coverage libs/vsix-packager/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/vsix-packager/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/vpack": {
        "name": "@fux/vpack",
        "type": "lib",
        "data": {
          "root": "plugins/vpack",
          "name": "@fux/vpack",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/vpack",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "plugins/vpack/src/index.ts",
                "tsConfig": "plugins/vpack/tsconfig.lib.json",
                "bundle": false,
                "assets": [
                  {
                    "input": "./plugins/vpack/src",
                    "glob": "**/!(*.ts)",
                    "output": "."
                  },
                  {
                    "input": "./plugins/vpack/src",
                    "glob": "**/*.d.ts",
                    "output": "."
                  }
                ],
                "format": [
                  "esm"
                ],
                "outputPath": "plugins/vpack/dist",
                "platform": "node",
                "target": "es2022",
                "external": [
                  "vscode"
                ],
                "thirdParty": false,
                "sourcemap": true,
                "deleteOutputPath": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "plugins/vpack/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/mockly": {
        "name": "@fux/mockly",
        "type": "lib",
        "data": {
          "root": "libs/mockly",
          "name": "@fux/mockly",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/mockly",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "libs/mockly/src/index.ts",
                "outputPath": "libs/mockly/dist",
                "tsConfig": "libs/mockly/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "declarationRootDir": "libs/mockly/src",
                "thirdParty": false,
                "deleteOutputPath": true,
                "external": [
                  "vscode",
                  "typescript",
                  "awilix",
                  "js-yaml"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "libs/mockly/**/*.ts",
                  "libs/mockly/**/*.tsx",
                  "libs/mockly/**/*.js",
                  "libs/mockly/**/*.jsx",
                  "libs/mockly/**/*.json",
                  "libs/mockly/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "libs/mockly/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/mockly:lint --fix",
                  "nx run @fux/mockly:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/mockly:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/mockly",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/mockly:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf libs/mockly/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf libs/mockly/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {
                "configFile": "libs/mockly/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/mockly/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/shared": {
        "name": "@fux/shared",
        "type": "lib",
        "data": {
          "root": "libs/shared",
          "name": "@fux/shared",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/shared",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "libs/shared/src/index.ts",
                "outputPath": "libs/shared/dist",
                "tsConfig": "libs/shared/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "declarationRootDir": "libs/shared/src",
                "thirdParty": false,
                "deleteOutputPath": true,
                "external": [
                  "js-yaml"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "extends": "lint",
              "configurations": {},
              "options": {
                "lintFilePatterns": [
                  "libs/shared/**/*.ts",
                  "libs/shared/**/*.tsx",
                  "libs/shared/**/*.js",
                  "libs/shared/**/*.jsx",
                  "libs/shared/**/*.json",
                  "libs/shared/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "libs/shared/.nx/eslintcache"
              },
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                "build",
                "^build"
              ]
            },
            "lint:full": {
              "extends": "lint:full",
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "@nx/eslint:lint",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "lint",
                  "params": "forward"
                }
              ]
            },
            "validate": {
              "extends": "validate",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/shared:lint --fix",
                  "nx run @fux/shared:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "validate:full": {
              "extends": "validate:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/shared:validate"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "validate",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit": {
              "extends": "audit",
              "configurations": {},
              "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts @fux/shared",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                "build",
                "^build"
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "audit:full": {
              "extends": "audit:full",
              "configurations": {},
              "options": {
                "commands": [
                  "nx run @fux/shared:audit"
                ],
                "parallel": false
              },
              "parallelism": true,
              "executor": "nx:run-commands",
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "audit",
                  "params": "forward"
                }
              ],
              "inputs": [
                "default",
                "^default"
              ],
              "outputs": [],
              "cache": true
            },
            "clean": {
              "extends": "clean",
              "configurations": {},
              "options": {
                "command": "rimraf libs/shared/dist libs/shared/coverage libs/shared/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:dist": {
              "extends": "clean:dist",
              "configurations": {},
              "options": {
                "command": "rimraf libs/shared/dist",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "clean:cache": {
              "extends": "clean:cache",
              "configurations": {},
              "options": {
                "command": "rimraf libs/shared/.nx",
                "cwd": ""
              },
              "parallelism": true,
              "executor": "nx:run-commands"
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {
                "configFile": "libs/shared/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
              },
              "parallelism": true
            },
            "test:full": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{options.reportsDirectory}"
              ],
              "dependsOn": [
                {
                  "dependencies": true,
                  "target": "test",
                  "params": "forward"
                }
              ],
              "options": {
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@fux/source": {
        "name": "@fux/source",
        "type": "lib",
        "data": {
          "root": ".",
          "name": "@fux/source",
          "includedScripts": [],
          "defaultCollection": "./generators",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/source",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {},
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "@fux/context-cherry-picker-core": [
        {
          "source": "@fux/context-cherry-picker-core",
          "target": "@fux/shared",
          "type": "static"
        }
      ],
      "@fux/context-cherry-picker-ext": [
        {
          "source": "@fux/context-cherry-picker-ext",
          "target": "@fux/mockly",
          "type": "static"
        },
        {
          "source": "@fux/context-cherry-picker-ext",
          "target": "@fux/context-cherry-picker-core",
          "type": "static"
        },
        {
          "source": "@fux/context-cherry-picker-ext",
          "target": "@fux/shared",
          "type": "static"
        }
      ],
      "@fux/cursor-memory-optimizer": [],
      "@fux/project-butler-core": [],
      "@fux/structure-auditor": [],
      "@fux/project-alias-expander": [],
      "@fux/project-butler-ext": [
        {
          "source": "@fux/project-butler-ext",
          "target": "@fux/project-butler-core",
          "type": "static"
        }
      ],
      "@fux/vscode-test-cli-config": [],
      "@fux/dynamicons-assets": [],
      "@fux/ghost-writer-core": [],
      "@fux/ghost-writer-ext": [
        {
          "source": "@fux/ghost-writer-ext",
          "target": "@fux/ghost-writer-core",
          "type": "static"
        }
      ],
      "@fux/prune-nx-cache": [
        {
          "source": "@fux/prune-nx-cache",
          "target": "@fux/shared",
          "type": "static"
        }
      ],
      "@fux/dynamicons-core": [],
      "@fux/dynamicons-ext": [
        {
          "source": "@fux/dynamicons-ext",
          "target": "@fux/dynamicons-core",
          "type": "static"
        },
        {
          "source": "@fux/dynamicons-ext",
          "target": "@fux/dynamicons-assets",
          "type": "static"
        }
      ],
      "@fux/note-hub-core": [],
      "@fux/note-hub-ext": [
        {
          "source": "@fux/note-hub-ext",
          "target": "@fux/note-hub-core",
          "type": "static"
        }
      ],
      "@fux/recommended": [],
      "@fux/observability": [],
      "@fux/vsix-packager": [],
      "@fux/vpack": [],
      "@fux/mockly": [],
      "@fux/shared": [
        {
          "source": "@fux/shared",
          "target": "@fux/mockly",
          "type": "static"
        }
      ],
      "@fux/source": []
    }
  }
}