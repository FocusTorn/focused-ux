{
    "targetDefaults": {
        "@nx/esbuild:esbuild": { //>
            "cache": true,
            "inputs": ["production", "^production"],
            "options": {
                "format": ["esm"],
                "bundle": true,
                "outputPath": "{projectRoot}/dist",
                "tsConfig": "{projectRoot}/tsconfig.json",
                "platform": "node",
                "target": "es2022",
                "external": ["vscode"],
                "thirdParty": false,
                "sourcemap": true,
                "deleteOutputPath": true
            }
        }, //<
        "@nx/js:tsc": { //>
            "cache": true,
            "dependsOn": ["^build"],
            "inputs": ["production", "^production"]
        }, //<
        
        //= Prepare ============================================================= 
        "build": { //>
            "dependsOn": ["^build"],
            "outputs": ["{options.outputPath}"],
            "inputs": ["production", "^production"],
            "cache": true,
            "syncGenerators": ["@nx/js:typescript-sync"]
        }, //<
        "package": { //>
            "executor": "@fux/vpack:pack",
            "outputs": ["{options.outputPath}"],
            "options": {
                "targetPath": "{projectRoot}",
                "outputPath": "vsix_packages",
                "deployPath": ".vpack/deploy",
                "freshDeploy": true,
                "keepDeploy": true,
                "contentsPath": ".vpack/contents",
                "extractContents": true,
                "dev": false
            }
        }, //<
        "package:dev": { //>
            "executor": "@fux/vpack:pack",
            "outputs": ["{options.outputPath}"],
            "options": {
                "targetPath": "{projectRoot}",
                "outputPath": "vsix_packages",
                "deployPath": ".vpack/deploy",
                "freshDeploy": true,
                "keepDeploy": true,
                "contentsPath": ".vpack/contents",
                "extractContents": true,
                "dev": true
            }
        }, //<
        "publish": { //>
            "dependsOn": ["build"]
        }, //<
       
        //= Quality ============================================================= 
        "check-types": { //>
            "executor": "@fux/ft-typescript:typecheck",
            "inputs": ["default", "^default"],
            "dependsOn": ["build"],
            "cache": true,
            "options": {
                "files": ["{projectRoot}/**/*.ts"]
            }
        }, //<
        "check-types:loose": { //>
            "executor": "@fux/ft-typescript:typecheck",
            "inputs": ["default", "^default"],
            "cache": true,
            "options": {
                "files": ["{projectRoot}/**/*.ts"],
                "strict": false
            }
        }, //<
        "check-types:deps": { //>
            "executor": "nx:run-commands",
            "cache": true,
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "check-types",
                    "params": "forward"
                }
            ],
            "inputs": ["default", "^default"],
            "options": {
                "command": "tsc --noEmit --project {projectRoot}/tsconfig.json",
                "cwd": "{workspaceRoot}"
            }
        }, //<
        //------------------------------
        "lint": { //>
            "executor": "@nx/eslint:lint",
            "cache": true,
            "dependsOn": ["build", "^build"],
            "options": {
                "lintFilePatterns": [
                    "{projectRoot}/**/*.ts",
                    "{projectRoot}/**/*.tsx",
                    "{projectRoot}/**/*.js",
                    "{projectRoot}/**/*.jsx",
                    "{projectRoot}/**/*.json",
                    "{projectRoot}/**/*.jsonc"
                ],
                "eslintConfig": "eslint.config.js",
                "format": "stylish",
                "quiet": false,
                "cache": true,
                "cacheLocation": "{projectRoot}/.nx/eslintcache"
            }
        }, //<
        "lint:deps": { //>
            "executor": "@nx/eslint:lint",
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "lint",
                    "params": "forward"
                }
            ]
        }, //<
        //------------------------------
        "audit": { //>
            "executor": "nx:run-commands",
            "dependsOn": ["build", "^build"],
            "inputs": ["default", "^default"],
            "outputs": [],
            "cache": true,
            "options": {
                "command": "tsx libs/tools/structure-auditor/src/main.ts {projectName}",
                "cwd": "{workspaceRoot}"
            }
        }, //<
        "audit:full": { //>
            "executor": "nx:run-commands",
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "audit",
                    "params": "forward"
                }
            ],
            "inputs": ["default", "^default"],
            "outputs": [],
            "cache": true,
            "options": {
                "commands": ["nx run {projectName}:audit"],
                "parallel": false
            }
        }, //<
        //------------------------------
        "validate": { //>
            "executor": "nx:run-commands",
            "dependsOn": [],
            "inputs": ["default", "^default"],
            "outputs": [],
            "cache": true,
            "options": {
                "commands": ["nx run {projectName}:lint --fix", "nx run {projectName}:audit"],
                "parallel": false
            }
        }, //<
        "validate:deps": { //>
            "executor": "nx:run-commands",
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "validate",
                    "params": "forward"
                }
            ],
            "inputs": ["default", "^default"],
            "outputs": [],
            "cache": true,
            "options": {
                "commands": ["nx run {projectName}:validate"],
                "parallel": false
            }
        }, //<
        
        //= Cleaning ============================================================ 
        "clean": { //>
            "executor": "nx:run-commands",
            "options": {
                "command": "rimraf {projectRoot}/dist {projectRoot}/coverage {projectRoot}/.nx",
                "cwd": "{workspaceRoot}"
            }
        }, //<
        "clean:dist": { //>
            "executor": "nx:run-commands",
            "options": {
                "command": "rimraf {projectRoot}/dist",
                "cwd": "{workspaceRoot}"
            }
        }, //<
        "clean:cache": { //>
            "executor": "nx:run-commands",
            "options": {
                "command": "rimraf {projectRoot}/.nx",
                "cwd": "{workspaceRoot}"
            }
        }, //<

        //= Single Package Testing ============================================== 
        "test": { //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": ["build", "^build"],
            "options": {
                "configFile": "{projectRoot}/vitest.config.ts",
                "reportsDirectory": "__tests__/_reports/functional",
                "passWithNoTests": true
            }
        }, //<
        "test:coverage-tests": { //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": ["build", "^build"],
            "options": {
                "configFile": "{projectRoot}/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
            }
        }, //<
        
        //= Dependency Chain Testing ============================================ 
        "test:deps": { //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "test",
                    "params": "forward"
                }
            ],
            "options": {
                "configFile": "{projectRoot}/vitest.config.ts",
                "passWithNoTests": true
            }
        }, //<
        "test:deps:coverage-tests": { //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "test:coverage-tests",
                    "params": "forward"
                }
            ],
            "options": {
                "configFile": "{projectRoot}/vitest.coverage.config.ts",
                "reportsDirectory": "__tests__/_reports/coverage",
                "passWithNoTests": true
            }
        }, //<
        
        //= Integration Testing ================================================= 
        "test:integration": { //>
            "executor": "@fux/vscode-test-executor:test-integration",
            "dependsOn": ["build"],
            "cache": false,
            "options": {
                "tsConfig": "{projectRoot}/__tests__/integration-tests/tsconfig.test.json",
                "config": "{projectRoot}/__tests__/integration-tests/.vscode-test.mjs",
                "timeout": 20000,
                "filterOutput": true
            }
        } //<
    },
    "namedInputs": {
        "default": [ //>
            "{projectRoot}/**/*",
            "sharedGlobals",
            "!{projectRoot}/**/*.md",
            "!{projectRoot}/**/*.markdown",
            "!{projectRoot}/**/*.mdx",
            "!{projectRoot}/**/*.png",
            "!{projectRoot}/**/*.jpg",
            "!{projectRoot}/**/*.jpeg",
            "!{projectRoot}/**/*.gif",
            "!{projectRoot}/**/*.svg",
            "!{projectRoot}/**/*.ico",
            "!{projectRoot}/**/*.pdf",
            "!{projectRoot}/docs/**"
        ], //<
        "production": [ //>
            "default",
            "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
            "!{projectRoot}/tsconfig.spec.json",
            "!{projectRoot}/src/test-setup.[jt]s"
        ], //<
        "test": [ //>
            "default",
            "{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
            "{projectRoot}/tsconfig.spec.json",
            "{projectRoot}/src/test-setup.[jt]s"
        ], //<
        "lint": [ //>
            "default",
            "{projectRoot}/**/*.eslintrc.js",
            "{projectRoot}/**/*.eslint.json"
        ], //<
        "docs": [ //>
            "{projectRoot}/docs/**",
            "{projectRoot}/**/*.md",
            "{projectRoot}/**/*.markdown",
            "{projectRoot}/**/*.mdx"
        ], //<
        "sharedGlobals": [ //>
            "{workspaceRoot}/.github/workflows/ci.yml"
        ] //<
    },

    "packageManager": "pnpm",
    "nxCloudId": "685c28f2a5df05525dfa937b",
    "$schema": "./node_modules/nx/schemas/nx-schema.json",
    "defaultBase": "master",
    "defaultRunner": "nx/tasks-runners/default",
    "plugins": [
        
        { "plugin": "@nx/vite/plugin",
            "options": {
                "buildTargetName": "build",
                "testTargetName": "vite:test",
                "serveTargetName": "serve",
                "devTargetName": "dev",
                "previewTargetName": "preview",
                "serveStaticTargetName": "serve-static",
                "typecheckTargetName": "tcheck",
                "buildDepsTargetName": "build-deps",
                "watchDepsTargetName": "watch-deps"
            }
        } //<
    
    ],
    "tui": { "enabled": false }
    
}
