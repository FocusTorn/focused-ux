{
  "graph": {
    "nodes": {
      "@fux/context-cherry-picker-core": {
        "name": "@fux/context-cherry-picker-core",
        "type": "lib",
        "data": {
          "root": "packages/context-cherry-picker/core",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/context-cherry-picker/core",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/*.tsbuildinfo",
                "{workspaceRoot}/packages/_utilities/dist/**/*.d.ts",
                "{workspaceRoot}/packages/_utilities/dist/tsconfig.lib.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/context-cherry-picker/core/src/index.ts",
                "outputPath": "packages/context-cherry-picker/core/dist",
                "tsConfig": "packages/context-cherry-picker/core/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "thirdParty": false,
                "external": [
                  "vscode"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @fux/context-cherry-picker-core --includeDependentProjects -- pnpm exec nx build-deps @fux/context-cherry-picker-core"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/context-cherry-picker-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/context-cherry-picker-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/context-cherry-picker/core/src",
          "implicitDependencies": []
        }
      },
      "@fux/context-cherry-picker-ext": {
        "name": "@fux/context-cherry-picker-ext",
        "type": "app",
        "data": {
          "root": "packages/context-cherry-picker/ext",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/context-cherry-picker/ext",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/node_modules",
                "!{projectRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/*.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "dependsOn": [
                "^build"
              ],
              "options": {
                "main": "packages/context-cherry-picker/ext/src/extension.ts",
                "outputPath": "packages/context-cherry-picker/ext/dist",
                "tsConfig": "packages/context-cherry-picker/ext/tsconfig.json",
                "platform": "node",
                "format": [
                  "cjs"
                ],
                "bundle": true,
                "external": [
                  "vscode"
                ],
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "packages/context-cherry-picker/ext/assets",
                    "output": "assets"
                  }
                ],
                "thirdParty": true
              },
              "configurations": {
                "development": {
                  "minify": false
                },
                "production": {
                  "minify": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package:dev": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node ./_scripts/create-dev-vsix.js context-cherry-picker/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "package": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "outputs": [
                "{workspaceRoot}/vsix_packages/context-cherry-picker.vsix"
              ],
              "options": {
                "command": "vsce package --no-dependencies -o ../../vsix_packages/context-cherry-picker.vsix",
                "cwd": "packages/context-cherry-picker/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/context-cherry-picker/ext"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/context-cherry-picker-ext",
          "tags": [
            "npm:private",
            "npm:context",
            "npm:cherry pick",
            "npm:developer tools",
            "npm:focused ux"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "A standalone extension for advanced context selection and formatting.",
            "js": {
              "packageName": "context-cherry-picker",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/context-cherry-picker/ext/src",
          "implicitDependencies": []
        }
      },
      "@fux/ai-agent-interactor-core": {
        "name": "@fux/ai-agent-interactor-core",
        "type": "lib",
        "data": {
          "root": "packages/ai-agent-interactor/core",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/ai-agent-interactor/core",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/ai-agent-interactor/core/src/index.ts",
                "outputPath": "packages/ai-agent-interactor/core/dist",
                "tsConfig": "packages/ai-agent-interactor/core/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "external": [
                  "vscode"
                ],
                "thirdParty": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @fux/ai-agent-interactor-core --includeDependentProjects -- pnpm exec nx build-deps @fux/ai-agent-interactor-core"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/ai-agent-interactor-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/ai-agent-interactor-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/ai-agent-interactor/core/src",
          "implicitDependencies": []
        }
      },
      "@fux/ai-agent-interactor-ext": {
        "name": "@fux/ai-agent-interactor-ext",
        "type": "app",
        "data": {
          "root": "packages/ai-agent-interactor/ext",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/ai-agent-interactor/ext",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/node_modules",
                "!{projectRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/app/**/*.d.ts",
                "{projectRoot}/out-tsc/*.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "defaultConfiguration": "production",
              "dependsOn": [
                "^build"
              ],
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/ai-agent-interactor/ext/src/extension.ts",
                "outputPath": "packages/ai-agent-interactor/ext/dist",
                "tsConfig": "packages/ai-agent-interactor/ext/tsconfig.json",
                "platform": "node",
                "format": [
                  "cjs"
                ],
                "bundle": true,
                "external": [
                  "vscode"
                ],
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "thirdParty": true
              },
              "configurations": {
                "development": {
                  "minify": false
                },
                "production": {
                  "minify": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package:dev": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node ./_scripts/create-dev-vsix.js ai-agent-interactor/ext"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/ai-agent-interactor-ext",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Automates the transfer of code from an AI Agent into a VSCode file.",
            "js": {
              "packageName": "ai-agent-interactor",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/ai-agent-interactor/ext/src",
          "implicitDependencies": []
        }
      },
      "@fux/project-butler-core": {
        "name": "@fux/project-butler-core",
        "type": "lib",
        "data": {
          "root": "packages/project-butler/core",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/project-butler/core",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/*.tsbuildinfo",
                "{workspaceRoot}/packages/_utilities/dist/**/*.d.ts",
                "{workspaceRoot}/packages/_utilities/dist/tsconfig.lib.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/project-butler/core/src/index.ts",
                "outputPath": "packages/project-butler/core/dist",
                "tsConfig": "packages/project-butler/core/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "thirdParty": false,
                "external": [
                  "vscode"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @fux/project-butler-core --includeDependentProjects -- pnpm exec nx build-deps @fux/project-butler-core"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/project-butler-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/project-butler-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/project-butler/core/src",
          "implicitDependencies": []
        }
      },
      "@fux/project-butler-ext": {
        "name": "@fux/project-butler-ext",
        "type": "app",
        "data": {
          "root": "packages/project-butler/ext",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/project-butler/ext",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/node_modules",
                "!{projectRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/app/**/*.d.ts",
                "{projectRoot}/out-tsc/*.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "dependsOn": [
                "^build"
              ],
              "options": {
                "main": "packages/project-butler/ext/src/extension.ts",
                "outputPath": "packages/project-butler/ext/dist",
                "tsConfig": "packages/project-butler/ext/tsconfig.json",
                "platform": "node",
                "format": [
                  "cjs"
                ],
                "bundle": true,
                "external": [
                  "vscode"
                ],
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "packages/project-butler/ext/assets",
                    "output": "assets"
                  }
                ],
                "thirdParty": true
              },
              "configurations": {
                "development": {
                  "minify": false
                },
                "production": {
                  "minify": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package:dev": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node ./_scripts/create-dev-vsix.js project-butler/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "package": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "outputs": [
                "{workspaceRoot}/vsix_packages/project-butler-dc.vsix"
              ],
              "options": {
                "command": "vsce package --no-dependencies -o ../../vsix_packages/context-cherry-picker.vsix",
                "cwd": "packages/project-butler/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/project-butler/ext"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/project-butler-ext",
          "tags": [
            "npm:private",
            "npm:automation",
            "npm:backup",
            "npm:poetry",
            "npm:project",
            "npm:terminal",
            "npm:workflow"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "A decoupled collection of project management utilities.",
            "js": {
              "packageName": "project-butler-dc",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/project-butler/ext/src",
          "implicitDependencies": []
        }
      },
      "@fux/ghost-writer-core": {
        "name": "@fux/ghost-writer-core",
        "type": "lib",
        "data": {
          "root": "packages/ghost-writer/core",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/ghost-writer/core",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/*.tsbuildinfo",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/packages/_utilities/dist/**/*.d.ts",
                "{workspaceRoot}/packages/_utilities/dist/tsconfig.lib.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/ghost-writer/core/dist",
                "main": "packages/ghost-writer/core/src/index.ts",
                "tsConfig": "packages/ghost-writer/core/tsconfig.lib.json",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "declarationRootDir": "packages/ghost-writer/core/src",
                "thirdParty": false,
                "platform": "node",
                "external": [
                  "vscode"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @fux/ghost-writer-core --includeDependentProjects -- pnpm exec nx build-deps @fux/ghost-writer-core"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/ghost-writer-core",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/ghost-writer-core",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/ghost-writer/core/src",
          "implicitDependencies": []
        }
      },
      "@fux/ghost-writer-ext": {
        "name": "@fux/ghost-writer-ext",
        "type": "lib",
        "data": {
          "root": "packages/ghost-writer/ext",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/ghost-writer/ext",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/*.tsbuildinfo",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/packages/ghost-writer/core/dist/**/*.d.ts",
                "{workspaceRoot}/packages/ghost-writer/core/dist/tsconfig.lib.tsbuildinfo",
                "{workspaceRoot}/packages/_utilities/dist/**/*.d.ts",
                "{workspaceRoot}/packages/_utilities/dist/tsconfig.lib.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/ghost-writer/ext/dist",
                "main": "packages/ghost-writer/ext/src/index.ts",
                "tsConfig": "packages/ghost-writer/ext/tsconfig.lib.json",
                "format": [
                  "esm"
                ],
                "bundle": true,
                "declarationRootDir": "packages/ghost-writer/ext/src",
                "platform": "node",
                "external": [
                  "vscode"
                ],
                "thirdParty": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @fux/ghost-writer-ext --includeDependentProjects -- pnpm exec nx build-deps @fux/ghost-writer-ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "package:dev": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node ./_scripts/create-dev-vsix.js ghost-writer/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "package": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "outputs": [
                "{workspaceRoot}/vsix_packages/ghost-writer.vsix"
              ],
              "options": {
                "command": "vsce package --no-dependencies -o ../../vsix_packages/ghost-writer.vsix",
                "cwd": "packages/ghost-writer/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/ghost-writer/ext"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/ghost-writer-ext",
          "tags": [
            "npm:private",
            "npm:import",
            "npm:code generation",
            "npm:automation",
            "npm:logging",
            "npm:console",
            "npm:debug",
            "npm:snippet",
            "npm:clipboard",
            "npm:developer tools",
            "npm:focused ux"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "Dynamically generate frequently used code.",
            "js": {
              "packageName": "@fux/ghost-writer-ext",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/ghost-writer/ext/src",
          "implicitDependencies": []
        }
      },
      "@fux/dynamicons-core": {
        "name": "@fux/dynamicons-core",
        "type": "lib",
        "data": {
          "root": "packages/dynamicons/core",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/dynamicons/core",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/*.tsbuildinfo",
                "{workspaceRoot}/packages/_utilities/dist/**/*.d.ts",
                "{workspaceRoot}/packages/_utilities/dist/tsconfig.lib.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "main": "packages/dynamicons/core/src/index.ts",
                "outputPath": "packages/dynamicons/core/dist",
                "tsConfig": "packages/dynamicons/core/tsconfig.lib.json",
                "platform": "node",
                "format": [
                  "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "thirdParty": false,
                "external": [
                  "vscode"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @fux/dynamicons-core --includeDependentProjects -- pnpm exec nx build-deps @fux/dynamicons-core"
              },
              "configurations": {},
              "parallelism": true
            },
            "build-assets": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec tsx ./src/scripts/build_dynamicon_assets.ts",
                "cwd": "packages/dynamicons/core"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/dynamicons-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/dynamicons-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/dynamicons/core/src",
          "implicitDependencies": []
        }
      },
      "@fux/dynamicons-ext": {
        "name": "@fux/dynamicons-ext",
        "type": "app",
        "data": {
          "root": "packages/dynamicons/ext",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/dynamicons/ext",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/node_modules",
                "!{projectRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/*.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "dependsOn": [
                "^build"
              ],
              "options": {
                "main": "packages/dynamicons/ext/src/extension.ts",
                "outputPath": "packages/dynamicons/ext/dist",
                "tsConfig": "packages/dynamicons/ext/tsconfig.json",
                "platform": "node",
                "format": [
                  "cjs"
                ],
                "bundle": true,
                "external": [
                  "vscode"
                ],
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "packages/dynamicons/ext/assets",
                    "output": "assets"
                  }
                ],
                "thirdParty": true
              },
              "configurations": {
                "development": {
                  "minify": false
                },
                "production": {
                  "minify": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "package:dev": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "options": {
                "command": "node ./_scripts/create-dev-vsix.js dynamicons/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "package": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "build"
              ],
              "outputs": [
                "{workspaceRoot}/vsix_packages/dynamicons.vsix"
              ],
              "options": {
                "command": "vsce package --no-dependencies -o ../../../vsix_packages/dynamicons.vsix",
                "cwd": "packages/dynamicons/ext"
              },
              "configurations": {},
              "parallelism": true
            },
            "publish": {
              "executor": "nx:run-commands",
              "dependsOn": [
                "package"
              ],
              "options": {
                "command": "vsce publish",
                "cwd": "packages/dynamicons/ext"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/dynamicons-ext",
          "tags": [
            "npm:private",
            "npm:icon theme",
            "npm:theme",
            "npm:icons",
            "npm:dynamicons",
            "npm:focused ux"
          ],
          "metadata": {
            "targetGroups": {},
            "description": "A dynamic and customizable icon theme for a focused user experience.",
            "js": {
              "packageName": "fux-dynamicons",
              "packageMain": "./dist/extension.cjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/dynamicons/ext/src",
          "implicitDependencies": []
        }
      },
      "@fux/utilities": {
        "name": "@fux/utilities",
        "type": "lib",
        "data": {
          "root": "packages/_utilities",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/_utilities",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/esbuild:esbuild",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/_utilities/dist",
                "main": "packages/_utilities/src/index.ts",
                "tsConfig": "packages/_utilities/tsconfig.lib.json",
                "bundle": false,
                "format": [
                  "esm"
                ],
                "declarationRootDir": "packages/_utilities/src",
                "keepNames": true,
                "platform": "node",
                "external": [
                  "vscode"
                ],
                "thirdParty": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @fux/utilities --includeDependentProjects -- pnpm exec nx build-deps @fux/utilities"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@fux/utilities",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/utilities",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                },
                "./*": {
                  "types": "./dist/*.d.ts",
                  "import": "./dist/*.js",
                  "default": "./dist/*.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/_utilities/src",
          "implicitDependencies": []
        }
      },
      "@fux/source": {
        "name": "@fux/source",
        "type": "lib",
        "data": {
          "root": ".",
          "name": "@fux/source",
          "includedScripts": [],
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@fux/source",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "local-registry": {
              "executor": "@nx/js:verdaccio",
              "options": {
                "port": 4873,
                "config": ".verdaccio/config.yml",
                "storage": "tmp/local-registry/storage"
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            }
          },
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "@fux/context-cherry-picker-core": [
        {
          "source": "@fux/context-cherry-picker-core",
          "target": "@fux/utilities",
          "type": "static"
        }
      ],
      "@fux/context-cherry-picker-ext": [
        {
          "source": "@fux/context-cherry-picker-ext",
          "target": "@fux/context-cherry-picker-core",
          "type": "static"
        },
        {
          "source": "@fux/context-cherry-picker-ext",
          "target": "@fux/utilities",
          "type": "static"
        }
      ],
      "@fux/ai-agent-interactor-core": [],
      "@fux/ai-agent-interactor-ext": [
        {
          "source": "@fux/ai-agent-interactor-ext",
          "target": "@fux/ai-agent-interactor-core",
          "type": "static"
        },
        {
          "source": "@fux/ai-agent-interactor-ext",
          "target": "@fux/utilities",
          "type": "static"
        }
      ],
      "@fux/project-butler-core": [
        {
          "source": "@fux/project-butler-core",
          "target": "@fux/utilities",
          "type": "static"
        }
      ],
      "@fux/project-butler-ext": [
        {
          "source": "@fux/project-butler-ext",
          "target": "@fux/project-butler-core",
          "type": "static"
        },
        {
          "source": "@fux/project-butler-ext",
          "target": "@fux/utilities",
          "type": "static"
        }
      ],
      "@fux/ghost-writer-core": [],
      "@fux/ghost-writer-ext": [
        {
          "source": "@fux/ghost-writer-ext",
          "target": "@fux/ghost-writer-core",
          "type": "static"
        },
        {
          "source": "@fux/ghost-writer-ext",
          "target": "@fux/utilities",
          "type": "static"
        }
      ],
      "@fux/dynamicons-core": [
        {
          "source": "@fux/dynamicons-core",
          "target": "@fux/utilities",
          "type": "static"
        }
      ],
      "@fux/dynamicons-ext": [
        {
          "source": "@fux/dynamicons-ext",
          "target": "@fux/dynamicons-core",
          "type": "static"
        },
        {
          "source": "@fux/dynamicons-ext",
          "target": "@fux/utilities",
          "type": "static"
        }
      ],
      "@fux/utilities": [],
      "@fux/source": []
    }
  }
}