# Project Alias Expander (PAE) Configuration
# YAML version of .pae.json for improved readability

# Universal command aliases
expandable-commands:
    build: nx build @fux/project-alias-expander -s
    globalize: nx install @fux/project-alias-expander -s

# Feature-specific Nx targets with run context
feature-nxTargets:
    b:
        run-from: ext
        run-target: build
    t:
        run-from: ext
        run-target: test:deps
        flags: --output-style=stream
    ti:
        run-from: ext
        run-target: test:integration
    tsc:
        run-from: ext
        run-target: type-check
    l:
        run-from: ext
        run-target: lint:deps
        flags: --output-style=stream
    ct:
        run-from: ext
        run-target: check-types:deps
        flags: --output-style=stream

targets:
    nx-targets:
        b: build
        p: package
        pd: package:dev
        pub: publish
        ct: check-types
        ctd: check-types:deps
        l: lint
        lf: lint:deps
        v: validate
        vf: validate:deps
        a: audit
        aa: audit:all
        at: audit:test
        ac: audit:code
        t: test
        tc: test:coverage-tests
        td: test:deps
        tdc: test:deps:coverage-tests
        ti: test:integration
        tf: test:file
        c: clean
        cc: clean:cache
        cd: clean:dist

    not-nx-target:
        # {{value}} = what to add, EG @vitest/ui or 
        # {{nxPackages}} = the expanded alias, EG pbc = @fux/project-butler-core
        # pae pbc pad @vitest/ui would execute
        # pnpm add -D @vitest/ui --filter @fux/project-butler-core

        pad: pnpm add -D {{value}} --filter {{nxPackages}}

        # esv: npx esbuild-visualizer --metadata
        
        

# Expandable flags with templates
expandable-flags:
    q: --skip-nx-cache
    f: --fix
    c: --coverage
    watch: --watch

    # Complex flags (with templates and defaults)
    os:
        default: stream
        template: '--output-style={{value}}'
    bail:
        default: '1'
        template: '--bail {{value}}'

# Context-aware flags for file operations
context-aware-flags:
    file:
        l:
            default: ''
            template: '--lintFilePatterns={{value}}'
        t:
            default: ''
            template: '--testFile={{value}}'

# Internal flags (processed by PAE, not passed to commands)
internal-flags:
    h: --help

    sto:
        default: '10'
        mutation: "{{value}} >= 100 ? {{value}} : parseInt({{value}}.toString() + '000')"
        template: '--pae-execa-timeout={{value}}'

# Environment setting flags
env-setting-flags:
    v: --pae-verbose
    db: --pae-debug

    echo:
        defaults: ''
        mutation: "{{value}} -replace '^si$', 'short-in' -replace '^so$', 'short-out' -replace '^gi$', 'global-in' -replace '^go$', 'global-out'"
        template: '--pae-echo={{value}}'

    echoX:
        defaults: ''
        mutation: "{{value}} -replace '^si$', 'short-in' -replace '^so$', 'short-out' -replace '^gi$', 'global-in' -replace '^go$', 'global-out'"
        template: '--pae-echoX={{value}}'

# Nx package aliases
nxPackages:
    context-cherry-picker:
        aliases: [ccp]
        variants:
            core: ccpc
            ext: ccpe
        default: ext

    dynamicons:
        aliases: [dc]
        variants:
            assets: dca
            core: dcc
            ext: dce
        default: ext

    ghost-writer:
        aliases: [gw]
        variants:
            core: gwc
            ext: gwe
        default: ext

    project-butler:
        aliases: [pb]
        variants:
            core: pbc
            ext: pbe

    note-hub:
        aliases: [nh]
        variants:
            core: nhc
            ext: nhe

    vp: '@fux/vsix-packager'
    vsct: '@fux/vscode-test-cli-config'
    aka: '@fux/project-alias-expander'
    ms: '@fux/mock-strategy'
    audit: '@fux/structure-auditor'
    vpack: '@fux/vpack'
    vscte: '@fux/vscode-test-executor'
    fttc: '@fux/ft-typescript'
    reco: '@fux/recommended'

