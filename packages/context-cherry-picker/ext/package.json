{
    "name": "fux-context-cherry-picker",
    "displayName": "F-UX: Context Cherry Picker",
    "description": "A standalone VS Code extension for advanced context selection and formatting, designed to streamline the process of gathering and organizing project context for AI interactions and documentation.",
    "publisher": "NewRealityDesigns",
    "repository": "https://github.com/FocusTorn/focused-ux",
    "version": "0.1.0",
    "scripts": {
        "test": "nx vite:test",
        "test:run": "nx vite:test run",
        "test:coverage": "nx vite:test run --coverage",
        "test:ui": "nx vite:test --ui"
    },
    "dependencies": {
        "@fux/context-cherry-picker-core": "workspace:*",
        "gpt-tokenizer": "^3.0.1",
        "js-yaml": "^4.1.0",
        "micromatch": "^4.0.8",
        "@types/js-yaml": "^4.0.9",
        "@types/micromatch": "^4.0.9"
    },
    "devDependencies": {
        "@types/node": "^24.6.0",
        "@types/vscode": "^1.104.0",
        "typescript": "^5.9.2",
        "vitest": "^3.2.4"
    },
    "contributes": {
        "commands": [
            {
                "command": "ccp.saveCheckedState",
                "title": "CCP: Save Checked State",
                "category": "F-UX: Context Cherry Picker",
                "icon": "$(save)"
            },
            {
                "command": "ccp.refreshExplorer",
                "title": "CCP: Refresh Explorer",
                "category": "F-UX: Context Cherry Picker",
                "icon": "$(refresh)"
            },
            {
                "command": "ccp.deleteSavedState",
                "title": "CCP: Delete Saved State",
                "category": "F-UX: Context Cherry Picker",
                "icon": "$(trash)"
            },
            {
                "command": "ccp.loadSavedState",
                "title": "CCP: Load Saved State",
                "category": "F-UX: Context Cherry Picker",
                "icon": "$(diff-renamed)"
            },
            {
                "command": "ccp.clearAllCheckedInExplorer",
                "title": "CCP: Clear All Checked Items",
                "category": "F-UX: Context Cherry Picker",
                "icon": "$(clear-all)"
            },
            {
                "command": "ccp.copyContextOfCheckedItems",
                "title": "CCP: Copy Context of Checked Items",
                "category": "F-UX: Context Cherry Picker",
                "icon": "$(clippy)"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "CCP",
                    "title": "Context Cherry Picker",
                    "icon": "assets/ccp_activity_bar_icon.svg"
                }
            ]
        },
        "views": {
            "CCP": [
                {
                    "id": "ccp.quickSettingsView",
                    "name": "Quick Settings",
                    "type": "webview",
                    "icon": "$(settings-gear)"
                },
                {
                    "id": "ccp.explorerView",
                    "name": "Context Explorer",
                    "type": "tree",
                    "icon": "$(files)"
                },
                {
                    "id": "ccp.savedStatesView",
                    "name": "Saved States",
                    "type": "tree",
                    "icon": "$(save-all)"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "ccp.copyContextOfCheckedItems",
                    "when": "view == ccp.explorerView",
                    "group": "navigation@1"
                },
                {
                    "command": "ccp.saveCheckedState",
                    "when": "view == ccp.explorerView",
                    "group": "navigation@2"
                },
                {
                    "command": "ccp.clearAllCheckedInExplorer",
                    "when": "view == ccp.explorerView",
                    "group": "navigation@3"
                },
                {
                    "command": "ccp.refreshExplorer",
                    "when": "view == ccp.explorerView",
                    "group": "navigation@4"
                }
            ],
            "view/item/context": [
                {
                    "command": "ccp.loadSavedState",
                    "when": "view == ccp.savedStatesView && viewItem == savedStateEntry",
                    "group": "inline@1"
                },
                {
                    "command": "ccp.deleteSavedState",
                    "when": "view == ccp.savedStatesView && viewItem == savedStateEntry",
                    "group": "inline@2"
                }
            ]
        },
        "configuration": {
            "title": "Context Cherry Picker",
            "properties": {
                "ccp.ignoreGlobs": {
                    "type": "array",
                    "default": [],
                    "description": "Glob patterns to ignore files/folders during context collection and display in the explorer. Applies to both project structure and content collection. Overrides project-level .FocusedUX `ignore` config.",
                    "scope": "resource"
                },
                "ccp.projectTreeDisplay.alwaysShowGlobs": {
                    "type": "array",
                    "default": [],
                    "description": "Glob patterns for files/folders that should ALWAYS be included in the project tree output, regardless of selection or other filters. Overrides project-level .FocusedUX `project_tree.always_show` config.",
                    "scope": "resource"
                },
                "ccp.projectTreeDisplay.alwaysHideGlobs": {
                    "type": "array",
                    "default": [],
                    "description": "Glob patterns for files/folders that should ALWAYS be hidden from the project tree output. Overrides project-level .FocusedUX `project_tree.always_hide` config.",
                    "scope": "resource"
                },
                "ccp.projectTreeDisplay.showIfSelectedGlobs": {
                    "type": "array",
                    "default": [],
                    "description": "Glob patterns for files/folders that should ONLY be included in the project tree output if they are explicitly checked/selected. Overrides project-level .FocusedUX `project_tree.show_if_selected` config.",
                    "scope": "resource"
                },
                "ccp.directoryContentDisplay.hideDirAndContentsGlobs": {
                    "type": "array",
                    "default": [],
                    "description": "Glob patterns for directories whose contents (and the directory itself) should be completely hidden from the context explorer. Overrides project-level .FocusedUX `context_explorer.ignore` config.",
                    "scope": "resource"
                },
                "ccp.directoryContentDisplay.showDirHideContentsGlobs": {
                    "type": "array",
                    "default": [],
                    "description": "Glob patterns for directories that should be shown in the context explorer, but whose children should be hidden. Overrides project-level .FocusedUX `context_explorer.hide_children` config.",
                    "scope": "resource"
                },
                "ccp.google.apiKey": {
                    "type": "string",
                    "default": "",
                    "description": "Your Google Generative AI API key (for token counting with Google models).",
                    "scope": "window"
                },
                "ccp.settings.message_show_seconds": {
                    "type": "number",
                    "default": 1.5,
                    "description": "Duration (in seconds) for information and status messages displayed by the extension.",
                    "scope": "window"
                },
                "ccp.quickSetting.projectStructureContents.filter": {
                    "type": "string",
                    "enum": [
                        "none",
                        "selected",
                        "all"
                    ],
                    "default": "all",
                    "description": "Controls what project structure is included in the output: 'none', 'selected' items only, or 'all' project files.",
                    "scope": "resource"
                },
                "ccp.quickSetting.defaultStatusMessage.style": {
                    "type": "string",
                    "enum": [
                        "none",
                        "toast",
                        "bar",
                        "drop",
                        "desc"
                    ],
                    "default": "drop",
                    "description": "Controls where status messages appear: 'none', 'toast' (info message), 'bar' (status bar), 'drop' (explorer dropdown), 'desc' (explorer description).",
                    "scope": "window"
                }
            }
        }
    },
    "activationEvents": [
        "onStartupFinished",
        "onView:ccp_explorerView",
        "onView:ccp_savedStatesView",
        "onView:ccp_quickSettingsView",
        "onCommand:ccp.saveCheckedState",
        "onCommand:ccp.refreshExplorer",
        "onCommand:ccp.deleteSavedState",
        "onCommand:ccp.loadSavedState",
        "onCommand:ccp.clearAllCheckedInExplorer",
        "onCommand:ccp.copyContextOfCheckedItems"
    ],
    "icon": "assets/ccp-logo.png",
    "categories": [
        "Other",
        "AI"
    ],
    "keywords": [
        "context",
        "cherry pick",
        "developer tools",
        "focused ux"
    ],
    "engines": {
        "vscode": "^1.99.3"
    },
    "private": true,
    "type": "module",
    "main": "./dist/extension.cjs"
}
