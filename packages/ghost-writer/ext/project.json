{
    "name": "@fux/ghost-writer-ext",
    "$schema": "../../../node_modules/nx/schemas/project-schema.json",
    "sourceRoot": "packages/ghost-writer/ext/src",
    "projectType": "application",
    "targets": {
        "build": { //>
            "executor": "@nx/esbuild:esbuild",
            "outputs": ["{options.outputPath}"],
            "dependsOn": ["^build"],
            "options": {
                "main": "packages/ghost-writer/ext/src/index.ts",
                "entryPoints": ["packages/ghost-writer/ext/src/index.ts"],
                "outputPath": "packages/ghost-writer/ext/dist",
                
                "tsConfig": "packages/ghost-writer/ext/tsconfig.json",
                
                "format": ["cjs"],
                "metafile": true,
                "platform": "node",
                "bundle": true,
                "sourcemap": true,
                
                "external": [
                    "vscode"
                ],
                
                "assets": [
                    {
                        "glob": "**/*",
                        "input": "packages/ghost-writer/ext/assets/",
                        "output": "./assets/"
                    }
                ]
            }
        }, //<
        
        "package": { //>
            "executor": "nx:run-commands",
            "dependsOn": ["build"],
            "options": {
                "command": "node scripts/create-vsix.js packages/ghost-writer/ext vsix_packages"
            }
        }, //<
        "package:dev": { //>
            "executor": "nx:run-commands",
            "dependsOn": ["build"],
            "options": {
                "command": "node scripts/create-vsix.js packages/ghost-writer/ext vsix_packages --dev",
                "outputPath": "vsix_packages"
            }
        }, //<
        "publish": { //>
            "executor": "nx:run-commands",
            "dependsOn": ["package"],
            "options": {
                "command": "vsce publish",
                "cwd": "{projectRoot}"
            }
        }, //<
        
        "check-types": { "extends": "check-types" },
        
        "lint": { "extends": "lint" },
        "lint:full": { "extends": "lint:full" },
        
        "validate": { "extends": "validate" },
        "validate:full": { "extends": "validate:full" },
        
        "audit": { "extends": "audit" },
        "audit:full": { "extends": "audit:full" },
        
        "clean": { "extends": "clean" },
        "clean:dist": { "extends": "clean:dist" },
        "clean:cache": { "extends": "clean:cache" },
        
        // "test": { //>
        //     "executor": "@nx/vite:test",
        //     "outputs": ["{options.reportsDirectory}"],
        //     "dependsOn": ["^build"]
        // }, //<
        // "test:full": { //>
        //     "executor": "@nx/vite:test",
        //     "outputs": ["{options.reportsDirectory}"],
        //     "dependsOn": [
        //         {
        //             "dependencies": true,
        //             "target": "test",
        //             "params": "forward"
        //         }
        //     ]
        // } //<
    
        
        // ┌──────────────────────────────────────────────────────────────────────────────────────────────┐
        // │           The below targets run test suites only on the package that contains them           │
        // └──────────────────────────────────────────────────────────────────────────────────────────────┘                
        "test": { // run just functional-tests //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": ["build", "^build"],
            "options": {
                "configFile": "{projectRoot}/vitest.config.ts",
                "reportsDirectory": "{projectRoot}/__tests__/_reports/functional",
                "passWithNoTests": true
            }
        }, //<
        "test:coverage-tests": { // run {functional,coverage}-tests, with coverage report //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": ["build", "^build"],
            "options": {
                "configFile": "{projectRoot}/vitest.coverage.config.ts",
                "reportsDirectory": "{projectRoot}/__tests__/_reports/coverage",
                "passWithNoTests": true
            }
        }, //<

        //= Integration testing ================================================= 
        "test:compile": { //>
            "executor": "nx:run-commands",
            "outputs": ["{projectRoot}/__tests__/_out-tsc"],
            "options": {
                "commands": [
                // "rimraf ./__tests__/_out-tsc/suite",
                    "tsc -p packages/project-butler/ext/__tests__/tsconfig.test.json"
                ]
            }
        }, //<
        "test:integration": { //>
            "executor": "nx:run-commands",
            "dependsOn": [
                "build",
                "test:compile"
            ],
            "options": {
                "commands": [
                    "nx run @fux/vscode-test-cli-config:build",
                    "powershell -Command \"& {vscode-test --config .vscode-test.mjs --verbose --timeout 20000 --reporter spec 2>&1 | Select-String -NotMatch 'extensionEnabledApiProposals', 'ChatSessionStore', 'update#setState disabled', 'update#ctor', 'Started local extension host', 'Settings Sync'}\""
                ],
                "cwd": "packages/project-butler/ext"
            },
            "description": "Run VS Code extension integration tests with detailed output"
        }, //<
        "test:integration:noisy": { //>
            "executor": "nx:run-commands",
            "dependsOn": [
                "build",
                "test:compile"
            ],
            "options": {
                "commands": [
                    "nx run @fux/vscode-test-cli-config:build",
                    // "rimraf ../../../.vscode-test/user-data/fux-project-butler",
                    "vscode-test --config .vscode-test.mjs --verbose --timeout 20000 --reporter spec"
                ],
                "cwd": "packages/project-butler/ext"
            },
            "description": "Run VS Code extension integration tests with detailed output"
        }, //<
        
        
        // ┌──────────────────────────────────────────────────────────────────────────────────────────────┐
        // │       These run test suites on the package that contain them and full dependency chain       │
        // └──────────────────────────────────────────────────────────────────────────────────────────────┘                
        "test:deps": { // run just functional-tests //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "test",
                    "params": "forward"
                }
            ],
            "options": {
                "configFile": "{projectRoot}/vitest.config.ts",
                "passWithNoTests": true
            }
        }, //<
        "test:deps:coverage-tests": { // run {functional,coverage}-tests, with coverage report //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "test:coverage-tests",
                    "params": "forward"
                }
            ],
            "options": {
                "configFile": "{projectRoot}/vitest.coverage.config.ts",
                "reportsDirectory": "{projectRoot}/__tests__/_reports/coverage",
                "passWithNoTests": true
            }
        } //<
        
        
        
        
        
    },
    "tags": ["ext"]
}
