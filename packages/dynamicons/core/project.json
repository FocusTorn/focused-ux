{
    "name": "@fux/dynamicons-core",
    "$schema": "../../../node_modules/nx/schemas/project-schema.json",
    "sourceRoot": "packages/dynamicons/core/src",
    "projectType": "library",
    "targets": {
        "build-assets": { //>
            "executor": "nx:run-commands",
            "options": {
                "command": "tsx ./src/scripts/build_dynamicon_assets.ts",
                "cwd": "packages/dynamicons/core",
                "forwardAllArgs": true
            },
            "configurations": {
                "development": {
                    "command": "tsx ./src/scripts/build_dynamicon_assets.ts"
                }
            }
        }, //<
        "build": { //>
            "dependsOn": [
                "build-assets"
            ],
            "executor": "@nx/esbuild:esbuild",
            "outputs": [
                "{options.outputPath}"
            ],
            "inputs": [
                "{projectRoot}/src/**/*",
                "{projectRoot}/src/icons/**/*",
                "{workspaceRoot}/packages/dynamicons/ext/assets/icons/**/*",
                "{workspaceRoot}/packages/dynamicons/ext/assets/themes/*.json"
            ],
            "options": {
                "main": "packages/dynamicons/core/src/index.ts",
                "outputPath": "packages/dynamicons/core/dist",
                "tsConfig": "packages/dynamicons/core/tsconfig.lib.json",
                "platform": "node",
                "format": [
                    "esm"
                ],
                "bundle": false,
                "sourcemap": true,
                "target": "es2022",
                "keepNames": true,
                "declarationRootDir": "packages/dynamicons/core/src",
                "thirdParty": false,
                "deleteOutputPath": true,
                "external": [
                    "vscode",
                    "strip-json-comments"
                ]

            }
        }, //<
        
        "check-types": { "extends": "check-types" },
        
        "lint": { "extends": "lint" },
        "lint:full": { "extends": "lint:full" },
        
        "validate": { "extends": "validate" },
        "validate:full": { "extends": "validate:full" },
        
        "audit": { "extends": "audit" },
        "audit:full": { "extends": "audit:full" },
        
        "clean": { "extends": "clean" },
        "clean:dist": { "extends": "clean:dist" },
        "clean:cache": { "extends": "clean:cache" },

        "test": { //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": ["build", "^build"]
        }, //<
        "test:full": { //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "test",
                    "params": "forward"
                }
            ]
        } //<

    },
    "tags": []
}
