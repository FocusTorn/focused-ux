{
    "name": "@fux/dynamicons-ext",
    "$schema": "../../../node_modules/nx/schemas/project-schema.json",
    "sourceRoot": "packages/dynamicons/ext/src",
    "projectType": "application",
    "targets": {
        
        "build": { //>
            "executor": "@nx/esbuild:esbuild",
            "outputs": ["{options.outputPath}"],
            "dependsOn": ["^build", "@fux/dynamicons-assets:generate-assets", "sync-assets-staging"],
            "options": {
                "entryPoints": ["packages/dynamicons/ext/src/extension.ts"],
                "outputPath": "packages/dynamicons/ext/dist",
                "format": ["cjs"],
                "metafile": true,
                "platform": "node",
                "bundle": true,
                "external": [
                    "vscode",
                    "strip-json-comments"
                ],
                "sourcemap": true,
                "main": "packages/dynamicons/ext/src/extension.ts",
                "tsConfig": "packages/dynamicons/ext/tsconfig.json",
                "thirdParty": true
            }
        }, //<
        
        "generate-and-sync-assets": {
            "executor": "nx:run-commands",
            "outputs": ["{projectRoot}/dist/assets"],
            "dependsOn": ["@fux/dynamicons-assets:generate-assets"],
            "options": {
                "command": "npx tsx ../../dynamicons/assets/scripts/sync-to-ext.ts --target dynamicons-ext",
                "cwd": "{projectRoot}"
            },
            "description": "Generate all assets and sync to extension package"
        },
        "prepackage": {
            "executor": "nx:run-commands",
            "outputs": ["{projectRoot}/dist/assets"],
            "dependsOn": ["build"],
            "options": {
                "command": "robocopy assets-staging dist/assets /E /NFL /NDL /NJH /NJS /NC /NS /NP",
                "cwd": "{projectRoot}"
            },
            "description": "Build extension and sync assets for packaging/debugging"
        },
        "sync-assets-staging": {
            "executor": "nx:run-commands",
            "outputs": ["{projectRoot}/assets-staging"],
            "options": {
                "command": "npx tsx scripts/sync-to-ext.ts --target dynamicons-ext --staging",
                "cwd": "{workspaceRoot}/packages/dynamicons/assets"
            },
            "description": "Sync assets to staging directory (outside dist)"
        },
        "package": { //>
            "executor": "nx:run-commands",
            "dependsOn": ["prepackage"],
            "options": {
                "command": "node scripts/create-vsix.js packages/dynamicons/ext vsix_packages"
            }
        }, //<
        "package:dev": { //>
            "executor": "nx:run-commands",
            "dependsOn": ["prepackage"],
            "options": {
                "command": "node scripts/create-vsix.js packages/dynamicons/ext vsix_packages --dev",
                "outputPath": "vsix_packages"
            }
        }, //<
        "publish": { //>
            "executor": "nx:run-commands",
            "dependsOn": ["package"],
            "options": {
                "command": "vsce publish",
                "cwd": "{projectRoot}"
            }
        }, //<
        
        "check-types": { "extends": "check-types" },
        "lint": { "extends": "lint" },
        "lint:full": { "extends": "lint:full" },
        "validate": { "extends": "validate" },
        "validate:full": { "extends": "validate:full" },
        "audit": { "extends": "audit" },
        "audit:full": { "extends": "audit:full" },
        
        "clean": { "extends": "clean" },
        "clean:dist": { "extends": "clean:dist" },
        "clean:cache": { "extends": "clean:cache" },

        "test": { //>
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "dependsOn": ["^build"],
            "options": {}
        }, //<
        "test:full": {
            "executor": "@nx/vite:test",
            "outputs": [
                "{options.reportsDirectory}"
            ],
            "dependsOn": [
                {
                    "dependencies": true,
                    "target": "test",
                    "params": "forward"
                }
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
        },
        "test:compile": {
            "executor": "nx:run-commands",
            "outputs": ["{projectRoot}/__tests__/_out-tsc"],
            "options": {
                "commands": ["tsc -p packages/dynamicons/ext/__tests__/tsconfig.test.json"]
            }
        },
        "test:integration": {
            "executor": "nx:run-commands",
            "dependsOn": ["build", "test:compile"],
            "options": {
                "command": "vscode-test --config .vscode-test.mjs",
                "cwd": "packages/dynamicons/ext"
            },
            "configurations": {},
            "parallelism": true
        },
        "test:integration:full": {
            "executor": "nx:run-commands",
            "dependsOn": ["build", "test:compile"],
            "options": {
                "command": "vscode-test --config .vscode-test.mjs --coverage",
                "cwd": "packages/dynamicons/ext"
            },
            "configurations": {},
            "parallelism": true
        }
        
    },
    "tags": ["ext"]
}
