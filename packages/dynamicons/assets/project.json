{
    "name": "@fux/dynamicons-assets",
    "$schema": "../../../node_modules/nx/schemas/project-schema.json",
    "sourceRoot": "packages/dynamicons/assets/src",
    "projectType": "library",
    "targets": {
        "build": {
            "executor": "@nx/vite:build",
            "outputs": ["{options.outputPath}"],
            "options": {
                "outputPath": "dist/packages/dynamicons/assets",
                "main": "packages/dynamicons/assets/src/index.ts",
                "tsConfig": "packages/dynamicons/assets/tsconfig.json",
                "assets": ["packages/dynamicons/assets/*.md"]
            }
        },
        "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": ["{options.outputFile}"]
        },
        "test": {
            "executor": "@nx/vite:test",
            "outputs": ["{options.reportsDirectory}"],
            "options": {
                "passWithNoTests": true,
                "reportsDirectory": "../../coverage/packages/dynamicons/assets"
            }
        },
        		"process-assets": {
            "executor": "nx:run-commands",
            "options": {
                "command": "npx tsx scripts/main.ts",
                "cwd": "packages/dynamicons/assets"
            },
            "description": "Process all assets (concise output by default, use --verbose for detailed output)"
        },
        "process-assets:incremental": {
            "executor": "nx:run-commands",
            "options": {
                "command": "npx tsx scripts/process-icons.ts",
                "cwd": "packages/dynamicons/assets"
            },
            "description": "Process icons only (concise output by default, use --verbose for detailed output)"
        },
        "sync-to-ext": {
            "executor": "nx:run-commands",
            "options": {
                "command": "npx tsx scripts/sync-to-ext.ts",
                "cwd": "packages/dynamicons/assets"
            },
            "description": "Sync assets to extension package (concise output by default, use --verbose for detailed output)"
        },
        "validate-assets": {
            "executor": "nx:run-commands",
            "options": {
                "command": "npx tsx scripts/validate-assets.ts",
                "cwd": "packages/dynamicons/assets"
            },
            "description": "Validate all assets (concise output by default, use --verbose for detailed output)"
        },
        "generate-themes": {
            "executor": "nx:run-commands",
            "options": {
                "command": "npx tsx scripts/generate-themes.ts",
                "cwd": "packages/dynamicons/assets"
            },
            "description": "Generate theme files (concise output by default, use --verbose for detailed output)"
        },
        "generate-assets": {
            "executor": "nx:run-commands",
            "options": {
                "command": "npx tsx scripts/generate-assets.ts",
                "cwd": "packages/dynamicons/assets"
            },
            "description": "Generate all assets (icons, themes, previews) with orchestrated output"
        },
        "generate-previews": {
            "executor": "nx:run-commands",
            "options": {
                "command": "npx tsx scripts/generate-previews.ts",
                "cwd": "packages/dynamicons/assets"
            },
            "description": "Generate preview images (concise output by default, use --verbose for detailed output)"
        }
    },
    "tags": ["scope:dynamicons", "type:assets"]
}
